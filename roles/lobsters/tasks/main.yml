- include_tasks: apt.yml
  when: "'{{ family }}' == 'debian'"
- include_tasks: yum.yml
  when: "'{{ family }}' == 'redhat'"

- include_tasks: user.yml

- name: create lobsters directory
  file: >
    path="/srv/lobste.rs/{{ item }}/"
    state=directory
  with_items:
    - http
    - run
    - log

- name: git clone lobsters
  become: true
  become_user: lobsters
  register: clone
  git: >
    repo='https://github.com/lobsters/lobsters.git'
    dest='/srv/lobste.rs/http'
    force=yes

- name: check if bundler needs installing
  register: need_bundler
  shell: gem list --local bundler
  changed_when: "'bundler (' not in need_bundler"

- name: install bundler
  when: need_bundler.changed
  shell: gem install bundler

- name: bundle install
  become: true
  become_user: lobsters
  shell: bundle install --path vendor/bundle
  register: bundler
  changed_when: "'Installing' in bundler or 'Updating' in bundler or 'upgrade' in bundler"
  args:
    chdir: "/srv/lobste.rs/http/"

- name: migrate database
  when: clone.changed
  environment:
    RAILS_ENV: production
  command: chdir="/srv/lobste.rs/http" bundle exec rails db:migrate

- name: copy templates and icons
  copy: >
    src="{{ item.file }}"
    dest="/srv/lobste.rs/http/"
    owner=lobsters
    group=lobsters
    mode={{ item.mode }}
  register: sitefiles
  with_items:
    - { file: 'app', mode: '0600' }
    - { file: 'public', mode: '0644' }
    - { file: 'config', mode: '0644' }

- name: recompile assets
  when: clone.changed or bundler.changed or sitefiles.changed
  become: true
  become_user: lobsters
  environment:
    RAILS_ENV: production
  command: chdir="/srv/lobste.rs/http" bundle exec rails assets:precompile

- name: copy unicorn systemd service config
  copy: >
    src="systemd/lobsters-unicorn.service"
    dest="/etc/systemd/system/"
    owner=lobsters
    group=lobsters
    mode="0440"

# TODO: Add condition to do this only when systemd unit file changed
- name: just force systemd to reread configs
  systemd: >
    name="lobsters-unicorn"
    enabled=yes
    daemon_reload=yes

# TODO: Add step to start if service is stopped since reloaded won't start it
- name: restart unicorn
  when: clone.changed or bundler.changed or sitefiles.changed
  systemd: >
    name="lobsters-unicorn"
    state=reloaded

- name: cp cron script
  copy: >
    src="sbin/lobsters-cron"
    dest="/usr/local/sbin/lobsters-cron"
    owner=root
    group=root
    mode='0755'

- name: add crontab entry
  tags: cron
  cron: >
    state=present
    name=lobsters-cron
    user=lobsters
    minute="*/5"
    job=/usr/local/sbin/lobsters-cron
